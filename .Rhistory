v_mod$firstLoadPort <- test$Region[match(v_mod$firstLoadPort,test$PortName)]
#Replace cargo from the cargo table
v_mod$Cargo <- V_Dim_CargoAndGrade$CargoGrade_txt[match(v_mod$cargoShort,V_Dim_CargoAndGrade$Cargo_ShortName)]
# add dwt column from V_Dim_Vessel table to v_mod
v_mod$Dim_Vessel_Id <- v_mod$Fkey_Dim_Vessel_Id
left_join(v_mod,v_test, by = c ( "Dim_Vessel_Id" = "Dim_Vessel_Id" ))
left_join(v_mod,v_test, by = "Dim_Vessel_Id")
colnames(v_mod)
head(v_mod)
colnames(v_mod)
head(v_mod$Fkey_Dim_Vessel_Id)
View(V_Dim_Vessel)
View(v_test)
test1 %>% left_join(v_mod,v_test, by = "Dim_Vessel_Id")
test1 <- left_join(v_mod,v_test, by = "Dim_Vessel_Id")
head(test1[,c("Dim_Vessel_Id","Cargo","dwt")])
head(v_mod[,c("Dim_Vessel_Id","Cargo"
)])
head(v_test)
left_join(v_mod,v_test, by = "Dim_Vessel_Id")
colnames(v_mod)
"v_mod" %in% colnames(v_mod)
#"v_mod" %in% colnames(v_mod)
v_mod %>% left_join(v_test, by="Dim_Vessel_Id")
test2<-v_mod %>% left_join(V_Dim_Vessel %>% select(Dim_Vessel_Id,dwt),by="Dim_Vessel_Id" )
head(test2)
test3 <- V_Dim_Vessel %>% select(Dim_Vessel_Id,dwt) %>% right_join(v_mod,by="Dim_Vessel_Id")
head(test3)
head(test3$dwt)
test4 <- v_mod %>% left_join(V_Dim_Vessel[,c("Dim_Vessel_Id","dwt")], by="Dim_Vessel_Id")
head(test4)
test5 <- v_mod %>% left_join(V_Dim_Vessel[,c("Dim_Vessel_Id","dwt")], by=c("Fkey_Dim_Vessel_Id"="Dim_Vessel_Id"))
left_join(v_mod,V_Dim_Voyage,by = c("Fkey_Dim_Voyage_Id" = "Dim_Voyage_Id"))
left_join(v_mod,V_Dim_Voyage[,c("Dim_Voyage_Id","TCEquiv_Estimate_LatestDaySnapshot")],by = c("Fkey_Dim_Voyage_Id" = "Dim_Voyage_Id"))
View(v_test)
left_join(v_mod,v_test, by = c("Fkey_Dim_Vessel_Id" = "Dim_Vessel_Id"))
# modified data with combined groups and apply regression
# Preparing Data
library("tidyverse")
library(lubridate)
#read all file
V_Fact_VoyPNL_File <- "F:\\Git\\capstone project\\dataSets\\V_Fact_VoyPNL.csv"
test_File <- "F:\\Git\\capstone project\\dataSets\\test.csv"
V_Dim_CargoAndGrade_File <- "F:\\Git\\capstone project\\dataSets\\V_Dim_CargoAndGrade.csv"
V_Dim_Vessel_File <- "F:\\Git\\capstone project\\dataSets\\V_Dim_Vessel.csv"
V_Dim_Voyage_File <- "F:\\Git\\capstone project\\dataSets\\V_Dim_Voyage.csv"
V_Fact_VoyPNL <- read.csv(V_Fact_VoyPNL_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
test <- read.csv(test_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
V_Dim_CargoAndGrade <- read.csv(V_Dim_CargoAndGrade_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
V_Dim_Vessel <- read.csv(V_Dim_Vessel_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
V_Dim_Voyage <- read.csv(V_Dim_Voyage_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
# removing records with Fkey_Dim_Voyage_Id = -1
V_Fact_VoyPNL <- filter(V_Fact_VoyPNL, V_Fact_VoyPNL$Fkey_Dim_Voyage_Id != "-1")
V_Dim_Vessel <- filter(V_Dim_Vessel, V_Dim_Vessel$Dim_Vessel_Id != "-1")
# get the voyage completion date into proper format.
V_Fact_VoyPNL$Month <- lubridate::month(ymd(V_Fact_VoyPNL$Fkey_DimTime_CompletedGMT),label=TRUE)
# considering data with only data_type = "A" and BatchId = 96
v_mod<- V_Fact_VoyPNL[V_Fact_VoyPNL$data_type=='A' & V_Fact_VoyPNL$BatchId==max(V_Fact_VoyPNL$BatchId),]
v_mod$vsl_type <- sub(pattern = "^HAN.*", replacement = "HANDYMAX", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^MID.*", replacement = "MIDRANGE", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^PAN.*", replacement = "PANAMAX", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^AFR.*", replacement = "AFRAMAX", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^LR1.*", replacement = "LR1", x = v_mod$vsl_type)
#Restrict the number of ports by matching them with areas
v_mod$lastDiscPort <- test$Region[match(v_mod$lastDiscPort,test$PortName)]
v_mod$firstLoadPort <- test$Region[match(v_mod$firstLoadPort,test$PortName)]
#Replace cargo from the cargo table
v_mod$Cargo <- V_Dim_CargoAndGrade$CargoGrade_txt[match(v_mod$cargoShort,V_Dim_CargoAndGrade$Cargo_ShortName)]
v_mod <- left_join(v_mod,v_test, by = c("Fkey_Dim_Vessel_Id" = "Dim_Vessel_Id"))
v_mod <- v_mod %>% left_join(V_Dim_Vessel[,c("Dim_Vessel_Id","dwt")], by=c("Fkey_Dim_Vessel_Id"="Dim_Vessel_Id"))
# add est earnings and est voyage days columns from V_Dim_Voyage to v_mod
v_mod <- left_join(v_mod,V_Dim_Voyage[,c("Dim_Voyage_Id","TCEquiv_Estimate_LatestDaySnapshot","TotalVoyageDays_Estimate_LatestDaySnapshot")],by = c("Fkey_Dim_Voyage_Id" = "Dim_Voyage_Id"))
v_mod <- filter(v_mod, (v_mod$TCEquiv_Estimate_LatestDaySnapshot != 0) || (v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot != 0))
v_mod <- filter(v_mod,  v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot >= 1)
v_mod$dailyrate_Est <- v_mod$TCEquiv_Estimate_LatestDaySnapshot / v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot
write_csv(v_mod, "updated_data.csv")
v_mod$diff_TCEquiv <- v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot - v_mod$tcEquv_Act
write_csv(v_mod, "updated_data.csv")
reg <- lm(v_mod$tcEquv_Act~v_mod$vsl_type + v_mod$ttlVoyDays_Act + v_mod$Cargo + v_mod$Cargo_Lift_Act + v_mod$Month + v_mod$lastDiscPort)# + v_mod$dwt)
summary(reg)
reg <- lm(v_mod$tcEquv_Act~v_mod$vsl_type + v_mod$ttlVoyDays_Act + v_mod$Cargo + v_mod$Cargo_Lift_Act + v_mod$Month + v_mod$lastDiscPort + v_mod$dwt)
summary(reg)
#plot the regression results
plot(reg)
reg <- lm(v_mod$tcEquv_Act~v_mod$vsl_type + v_mod$ttlVoyDays_Act + v_mod$Cargo + v_mod$Cargo_Lift_Act + v_mod$Month + v_mod$lastDiscPort + v_mod$dwt)
summary(reg)
# Load all the packages used in the analysis
library("tidyverse")
library("lubridate")
# Read the files
V_Fact_VoyPNL_File <- "F:\\Git\\capstone project\\dataSets\\V_Fact_VoyPNL.csv"
test_File <- "F:\\Git\\capstone project\\dataSets\\test.csv"
V_Dim_CargoAndGrade_File <- "F:\\Git\\capstone project\\dataSets\\V_Dim_CargoAndGrade.csv"
V_Dim_Vessel_File <- "F:\\Git\\capstone project\\dataSets\\V_Dim_Vessel.csv"
V_Dim_Voyage_File <- "F:\\Git\\capstone project\\dataSets\\V_Dim_Voyage.csv"
# Store the data into dataframe and check for blanks and NA
V_Fact_VoyPNL <- read.csv(V_Fact_VoyPNL_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
test <- read.csv(test_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
V_Dim_CargoAndGrade <- read.csv(V_Dim_CargoAndGrade_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
V_Dim_Vessel <- read.csv(V_Dim_Vessel_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
V_Dim_Voyage <- read.csv(V_Dim_Voyage_File, na.strings=c("","NA"), stringsAsFactors = FALSE)
#Look at the structure of the dataset
glimpse(V_Fact_VoyPNL)
glimpse(test)
glimpse(V_Dim_CargoAndGrade)
glimpse(V_Dim_Vessel)
glimpse(V_Dim_Voyage)
# removing records with Fkey_Dim_Voyage_Id = -1
V_Fact_VoyPNL <- filter(V_Fact_VoyPNL, V_Fact_VoyPNL$Fkey_Dim_Voyage_Id != "-1")
V_Dim_Vessel <- filter(V_Dim_Vessel, V_Dim_Vessel$Dim_Vessel_Id != "-1")
# get the voyage completion date into proper format.
V_Fact_VoyPNL$Month <- lubridate::month(ymd(V_Fact_VoyPNL$Fkey_DimTime_CompletedGMT),label=TRUE)
V_Fact_VoyPNL$Year <- lubridate::year(ymd(V_Fact_VoyPNL$Fkey_DimTime_CompletedGMT),label=TRUE)
V_Fact_VoyPNL$Year <- lubridate::year(ymd(V_Fact_VoyPNL$Fkey_DimTime_CompletedGMT))
View(V_Fact_VoyPNL)
# considering data with only data_type = "A" and BatchId
v_mod<- V_Fact_VoyPNL[V_Fact_VoyPNL$data_type=='A' & V_Fact_VoyPNL$BatchId==max(V_Fact_VoyPNL$BatchId),]
#combine similar vessel types into one category.
v_mod$vsl_type <- sub(pattern = "^HAN.*", replacement = "HANDYMAX", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^MID.*", replacement = "MIDRANGE", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^PAN.*", replacement = "PANAMAX", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^AFR.*", replacement = "AFRAMAX", x = v_mod$vsl_type)
v_mod$vsl_type <- sub(pattern = "^LR1.*", replacement = "LR1", x = v_mod$vsl_type)
#Restrict the number of ports by matching them with areas
v_mod$lastDiscPort <- test$Region[match(v_mod$lastDiscPort,test$PortName)]
v_mod$firstLoadPort <- test$Region[match(v_mod$firstLoadPort,test$PortName)]
#Restrict the cargo types by matching them with Cargo text from the cargo table
v_mod$Cargo <- V_Dim_CargoAndGrade$CargoGrade_txt[match(v_mod$cargoShort,V_Dim_CargoAndGrade$Cargo_ShortName)]
# Join dwt column from V_Dim_Vessel table to the dataset
v_mod <- v_mod %>% left_join(V_Dim_Vessel[,c("Dim_Vessel_Id","dwt")], by=c("Fkey_Dim_Vessel_Id"="Dim_Vessel_Id"))
# Join estimate earnings and estimate voyage days columns from V_Dim_Voyage to the datset
v_mod <- left_join(v_mod,V_Dim_Voyage[,c("Dim_Voyage_Id","TCEquiv_Estimate_LatestDaySnapshot","TotalVoyageDays_Estimate_LatestDaySnapshot")],by = c("Fkey_Dim_Voyage_Id" = "Dim_Voyage_Id"))
# Calculate daily earnings for each voyage
v_mod <- filter(v_mod, (v_mod$TCEquiv_Estimate_LatestDaySnapshot != 0) || (v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot != 0))
v_mod <- filter(v_mod,  v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot >= 1)
v_mod$dailyrate_Est <- v_mod$TCEquiv_Estimate_LatestDaySnapshot / v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot
# Calculate the difference between estimated earnings and actual earnings
v_mod$diff_TCEquiv <- v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot - v_mod$tcEquv_Act
# calculate average earnings for each year for each vessel type
avgv2 <- aggregate(v_mod[,c("tcEquv_Act")],list(Year=v_mod$Year,vsl_type=v_mod$vsl_type), mean)
# plot average of each year for each type of vessel
avgv2yr <- avgv2[avgv2$year <= 2019 & avgv2$year >= 2010,]
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1))+ plot.title = element_text(hjust = 0.5) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "October Action")) +
scale_y_continuous(labels = scales::percent) +
geom_hline(data = hlines, aes(yintercept = baseline, colour = label)) +
scale_colour_manual(NULL, values = "green")
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "October Action")) +
scale_y_continuous(labels = scales::percent) +
geom_hline(data = hlines, aes(yintercept = baseline, colour = label)) +
scale_colour_manual(NULL, values = "green")
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "October Action")) +
scale_y_continuous(labels = scales::percent) +
#  geom_hline(data = hlines, aes(yintercept = baseline, colour = label)) +
scale_colour_manual(NULL, values = "green")
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "October Action"))
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings")
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
#  guides(fill=guide_legend(title = "October Action"))
#+  scale_y_continuous(labels = scales::percent) +
#  geom_hline(data = hlines, aes(yintercept = baseline, colour = label)) +
#  scale_colour_manual(NULL, values = "green")
#calculate average earnings for each vessel type for all years
avgv3 <- aggregate(v_mod[,c("tcEquv_Act")],list(vsl_type=v_mod$vsl_type), mean)
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings")
View(avgv2)
View(avgv2yr)
View(avgv2)
# plot average of each year for each type of vessel
avgv2yr <- avgv2[avgv2$year <= 2019 & avgv2$year >= 2018,]
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings")
head(avgv2)
# plot average of each year for each type of vessel
avgv2yr <- avgv2[avgv2$Year <= 2019 & avgv2$Year >= 2010,]
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings")
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "October Action"))
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "Vessel Type"))
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 0.5), plot.title = element_text(hjust = 0.5)) +
labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "Vessel Type")) +
scale_y_continuous(labels = scales::percent)
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1.25), plot.title = element_text(hjust = 0.5)) +   labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "Vessel Type")) +
scale_y_continuous(labels = scales::$)
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1.25), plot.title = element_text(hjust = 0.5)) +   labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "Vessel Type"))
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings") +
guides(fill=guide_legend(title = "Vessel Type"))
ggplot(avgv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)") +
guides(fill=guide_legend(title = "Vessel Type"))
#----------------------------
#calculate average earnings for each vessel type for all years
avgv3 <- aggregate(v_mod[,c("tcEquv_Act")],list(vsl_type=v_mod$vsl_type), mean)
# plot average for each vessel type for all years
ggplot(avgv3, aes(x=vsl_type,y=x)) +
geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)")
# plot average for each vessel type for all years
ggplot(avgv3, aes(x=vsl_type,y=x, col = vsl_type)) +
geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)")
# plot average for each vessel type for all years
ggplot(avgv3, aes(x=vsl_type,y=x, fill = vsl_type)) +
geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)")
# plot average for each vessel type for all years
ggplot(avgv3, aes(x=vsl_type,y=x)) +
geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)")
#----------------------------
# sum of earnings for each year for each vessel type
sumv2 <- aggregate(v_mod[,c("tcEquv_Act")],list(Year=v_mod$Year,vsl_type=v_mod$vsl_type), sum)
# plot sum for each year for each vessel type
ggplot(sumv2, aes(x=vsl_type,y=x, fill = vsl_type)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Sum of earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)") +
guides(fill=guide_legend(title = "Vessel Type"))
# plot sum for each year for each vessel type
ggplot(sumv2, aes(x=vsl_type,y=x, fill = vsl_type)) +
geom_bar(stat="identity") +
facet_wrap(~Year) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Sum of earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)") +
guides(fill=guide_legend(title = "Vessel Type"))
View(sumv2)
# plot average of each year for each type of vessel
sumv2yr <- sumv2[sumv2$Year <= 2019 & sumv2$Year >= 2010,]
ggplot(sumv2yr, aes(x=vsl_type,y=x)) +
geom_bar(aes(fill = factor(vsl_type)),stat="identity")+
facet_wrap(~Year, ncol = 2, nrow = 5) +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Sum of earnings vs Vessel type", x = "Vessel type", y = "Sum of earnings(USD)") +
guides(fill=guide_legend(title = "Vessel Type"))
#----------------------------
# Calulate average for each trade area
avgv4 <- aggregate(v_mod[,c("tcEquv_Act")],list(trade_area=v_mod$tradeArea), mean)
avgv4 <- avgv4[order(-avgv4$x),]
avgv5 <- head(avgv4, n=50)
#plot average for top 50 trade area
ggplot(avgv5, aes(x=reorder(trade_area,-x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Trade Area", x = "Trade Area", y = "Average earnings(USD)")
#plot average for top 50 trade area
ggplot(avgv5, aes(x=reorder(trade_area,-x),y=x, col = fill)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Trade Area", x = "Trade Area", y = "Average earnings(USD)")
#----------------------------
#sum of earnings for top 50 trade area
sumv4 <- aggregate(v_mod[,c("tcEquv_Act")],list(trade_area=v_mod$tradeArea), sum)
sumv4 <- sumv4[order(-sumv4$x),]
sumv5 <- head(sumv4, n=50)
#plot sum for top 50 trade area
ggplot(sumv5, aes(x=reorder(trade_area,-x),y=x)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Trade Area", x = "Trade Area", y = "Average earnings(USD)")
#----------------------------
#Sum of earnings for each Cargo type
sumv6 <- aggregate(v_mod[,c("tcEquv_Act")],list(cargo_type=v_mod$Cargo), sum)
sumv6 <- sumv6[order(-sumv6$x),]
#plot sum of earnings for each cargo type
ggplot(sumv6, aes(x=reorder(cargo_type,-x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Sum of earnings vs Cargo type", x = "Cargo type", y = "Sum of earnings(USD)")
#----------------------------
#Calculate average monthly earnings for each month
avgv6 <- aggregate(v_mod[,c("tcEquv_Act")],list(Month=v_mod$Month), mean)
avgv6 <- avgv4[order(-avgv4$x),]
#plot average for top 50 trade area
ggplot(avgv6, aes(x=reorder(trade_area,-x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#----------------------------
#Calculate average monthly earnings for each month
avgv6 <- aggregate(v_mod[,c("tcEquv_Act")],list(Month=v_mod$Month), mean)
avgv6 <- avgv4[order(-avgv4$x),]
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=reorder(Month,-x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#----------------------------
#Calculate average monthly earnings for each month
avgv6 <- aggregate(v_mod[,c("tcEquv_Act")],list(Month=v_mod$Month), mean)
avgv6 <- avgv6[order(-avgv4$x),]
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=reorder(Month,-x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
is.na(v_mod$Month)
sum(is.na(v_mod$Month))
#----------------------------
#Calculate average monthly earnings for each month
avgv6 <- aggregate(v_mod[,c("tcEquv_Act")],list(Month=v_mod$Month), mean)
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=reorder(Month,-x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=reorder(Month,x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=reorder(-Month,x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=order(Month,x),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#plot average monthly earnings for each month
ggplot(avgv6, aes(x=sort(Month),y=x)) +
geom_bar(stat="identity",position = "dodge")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Month", x = "Month", y = "Average earnings(USD)")
#Split the data into training dataset and testing dataset with a 70/30 ratio.
set.seed(50)
split = sample.split(v_mod, Splitratio = 0.70)
install.packages("caTools")
library("caTools")
split = sample.split(v_mod, Splitratio = 0.70)
split = sample.split(v_mod, SplitRatio = 0.70)
v_mod_train = subset(v_mod, split = TRUE)
v_mod_test = subset(v_mod, split = FALSE)
#Check the rows for training and testing the datasets
nrows(v_mod_train)
#Check the rows for training and testing the datasets
Nrows(v_mod_train)
#Split the data into training dataset and testing dataset with a 70/30 ratio.
set.seed(40)
split = sample.split(v_mod, SplitRatio = 0.70)
v_mod_train = subset(v_mod, split = TRUE)
v_mod_test = subset(v_mod, split = FALSE)
#Split the data into training dataset and testing dataset with a 70/30 ratio.
# set the seed to make the partition reproduciable.
set.seed(40)
split = sample.split(v_mod$Fact_VoyPNL_Id, SplitRatio = 0.70)
v_mod_train = subset(v_mod, split = TRUE)
v_mod_test = subset(v_mod, split = FALSE)
v_mod_train = subset(v_mod, split == TRUE)
v_mod_test = subset(v_mod, split == FALSE)
#Check the rows for training and testing the datasets
Nrows(v_mod_train)
nrows(v_mod_test)
#Check the rows for training and testing the datasets
nrow(v_mod_train)
nrow(v_mod_test)
reg <- lm(v_mod_train$tcEquv_Act~v_mod_train$vsl_type + v_mod_train$TotalVoyageDays_Estimate_LatestDaySnapshot + v_mod_train$Cargo + v_mod_train$Cargo_Lift_Act + v_mod_train$Month + v_mod_train$lastDiscPort + v_mod_train$dwt)
summary(reg)
plot(predict(reg),v_mod_test$tcEquv_Act)
# find the correlation
cor(v_mod$tcEquv_Act, v_mod$TotalVoyageDays_Estimate_LatestDaySnapshot)
cor(v_mod$tcEquv_Act, v_mod$vsl_type)
cor(v_mod$tcEquv_Act, v_mod$Cargo_Lift_Act)
cor(v_mod$tcEquv_Act, v_mod$dwt)
cor(v_mod$tcEquv_Act, v_mod$dwt)
summary(reg)
earningspred <- predict(reg,v_mod_test)
actual_pred <- data.frame(cbind(actuals=v_mod_test, predicted=earningspred))
plot(predict(reg),v_mod_test$tcEquv_Act)
View(v_mod_train)
View(v_mod_test)
# plot average for each vessel type for all years
ggplot(avgv3, aes(x=vsl_type,y=x)) +
geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle=45,hjust = 1), plot.title = element_text(hjust = 0.5)) +     labs(title = "Average earnings vs Vessel type", x = "Vessel type", y = "Average earnings(USD)")
ggplot(v_mod, aes(x=Month, y=tcEquv_Act)) +
geom_boxplot()
install.packages("TeXCheckR")
installr::installr(MikTeX)
install.packages("installr")
installr::installr(MikTeX)
Sys.getenv("PATH")
earningspred <- predict(reg,v_mod_test)
earningspred <- predict(reg,v_mod_test$tcEquv_Act)
?predict
?predict.lm
head(earningspred)
head(v_mod_test$tcEquv_Act)
plot(earningspred,v_mod_test$tcEquv_Act)
plot(v_mod_test$tcEquv_Act,earningspred)
earningspred <- predict(reg,newdata =v_mod_test)
reg2 <- lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act+v_mod_train$dwt)
pred2 <- predict(reg2, v_mod_test)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
reg2 <- lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act)
pred2 <- predict(reg2, v_mod_test)
pred2 <- predict(reg2, v_mod_test[,c("Cargo_Lift_Act")])
head(v_mod_train$Cargo_Lift_Act)
reg2 <- lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act)
pred2 <- predict(reg2, v_mod_test[,c("Cargo_Lift_Act")])
pred2 <- predict(reg2, v_mod_test
)
pred2 <- predict(reg2, v_mod_test[1:5,])
head(new)
reg2 <- lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act)
pred2 <- predict.lm(reg2, v_mod_test[1:5,])
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new1 <- data.frame(x = seq(-3, 3, 0.5))
new1
predict(lm(y ~ x), new1, se.fit = TRUE)
predict(lm(y ~ x), new1)
pred2 <- predict.lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act, v_mod_test[1:5,])
pred2 <- predict.lm(lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act), v_mod_test[1:5,])
new1
pred2 <- predict.lm(, v_mod_test[1:5,c("Cargo_Lift_Act")])
pred2 <- predict.lm(reg2, v_mod_test[1:5,c("Cargo_Lift_Act")])
reg2 <- lm(v_mod_train$tcEquv_Act~v_mod_train$Cargo_Lift_Act)
reg2 <- lm(v_mod_train$tcEquv_Act[1:10]~v_mod_train$Cargo_Lift_Act[1:10])
pred2 <- predict.lm(reg2, v_mod_test[1:5,c("Cargo_Lift_Act")])
pred2 <- predict(reg2, v_mod_test[1:5,c("Cargo_Lift_Act")])
v_mod_test[1:5,c("Cargo_Lift_Act")]
pred2 <- predict(reg2, v_mod_test)
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act))
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[1:10]))
pred2
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[1:11]),se.fit=TRUE)
pred2
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[1:11]))
pred2
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[1]))
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[1:10]))
pred2
pred2 <- predict(reg2, data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[11:20]))
pred2
pred2 <- predict(lm(v_mod_train$tcEquv_Act[1:10]~v_mod_train$Cargo_Lift_Act[1:10]), data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[11:19]))
pred2 <- predict(lm(v_mod_train$tcEquv_Act[1:10]~v_mod_train$Cargo_Lift_Act[1:10]), data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[11:20]))
pred2
pred2 <- predict(lm(v_mod_train$tcEquv_Act[1:10]~v_mod_train$Cargo_Lift_Act[1:10]), data.frame(Cargo_Lift_Act=v_mod_test$Cargo_Lift_Act[1:10]))
pred2 <- predict(lm(v_mod_train$tcEquv_Act[1:10]~v_mod_train$Cargo_Lift_Act[1:10]))
pred2
reg2
pred2 <- predict(reg2, v_mod_test$Cargo_Lift_Act[11:20])
help(lm)
reg2 <- lm(tcEquv_Act~Cargo_Lift_Act,v_mod_train[1:10,])
pred2 <- predict(reg2, v_mod_test$Cargo_Lift_Act[11:19])
pred2 <- predict(reg2, v_mod_test[11:19,c("Cargo_Lift_Act" )]
)
pred2 <- predict(reg2, v_mod_test[11:19,c("Cargo_Lift_Act" )])
pred2 <- predict(reg2, v_mod_test[11:19,])
head(pred2)
pred2
pred2 <- predict(reg2, v_mod_test[11:25,])
reg <- lm(tcEquv_Act~vsl_type + TotalVoyageDays_Estimate_LatestDaySnapshot + Cargo + Cargo_Lift_Act + Month + lastDiscPort + dwt,v_mod_train)
prediction <- predict(reg, v_mod_test)
plot(prediction,v_mod_test$tcEquv_Act)
plot(prediction,v_mod_test$tcEquv_Act,ylim=c(-5000,25000))
reg
summary(reg)
